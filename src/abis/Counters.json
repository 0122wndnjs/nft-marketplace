{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/libraries/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/libraries/Counters.sol\":{\"keccak256\":\"0xa144a9add73dd1ab969764973456b72b6948da0b0b647d3d3fb115a505009b6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557b9bc0665f36874d5dae76395bf4825afd8fd073e0fccca1ffcf22ccba6f15\",\"dweb:/ipfs/QmRgaFTkEzSygcdWaPhUuybDz9UWoqWasjmyiQJ62SS23n\"]},\"project:/src/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x143f8d9e50a145aa53ca0ae08f32a5f1fcf082dc3f5ce5a1ca37c5b42e7ef945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ec72c00fb428bd681569dbca519791186462a83a62f4bfa68b865f4c01b70b4\",\"dweb:/ipfs/QmYAmLfsdVE4PwQJECVma5cZzkrCrtu6cNze6VG8kh6QXH\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220671775f144baf90ab85f0b1d8c4104a914f1ccb35e1cd59ce66a6715592d1b0664736f6c634300080b0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220671775f144baf90ab85f0b1d8c4104a914f1ccb35e1cd59ce66a6715592d1b0664736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "665:647:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "665:647:12:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport './SafeMath.sol';\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\n\n\n library Counters {\n     using SafeMath for uint256;\n     \n     // build own variable type with the keyword 'struct'\n\n     // is a mechanism to keep track of our values of arithmetic changes to our code\n     struct Counter {\n         uint256 _value;\n     }\n\n     // we want to find the current value of a count\n     function current(Counter storage counter) internal view returns (uint256) {\n         return counter._value;\n     }\n\n     function decrement(Counter storage counter) internal {\n         counter._value = counter._value.sub(1);\n     }\n\n     function increment(Counter storage counter) internal {\n         counter._value += 1;\n     }\n }",
  "sourcePath": "/Users/jk/Documents/GitHub/nft-marketplace/src/contracts/libraries/Counters.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        1030
      ],
      "SafeMath": [
        1163
      ]
    },
    "id": 1031,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 979,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:12"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 980,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1031,
        "sourceUnit": 1164,
        "src": "66:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 981,
          "nodeType": "StructuredDocumentation",
          "src": "92:569:12",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 1030,
        "linearizedBaseContracts": [
          1030
        ],
        "name": "Counters",
        "nameLocation": "673:8:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 984,
            "libraryName": {
              "id": 982,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1163,
              "src": "695:8:12"
            },
            "nodeType": "UsingForDirective",
            "src": "689:27:12",
            "typeName": {
              "id": 983,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "708:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 987,
            "members": [
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "906:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 987,
                "src": "898:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 985,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "898:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "879:7:12",
            "nodeType": "StructDefinition",
            "scope": 1030,
            "src": "872:48:12",
            "visibility": "public"
          },
          {
            "body": {
              "id": 998,
              "nodeType": "Block",
              "src": "1054:40:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 995,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "1072:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 986,
                    "src": "1072:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 994,
                  "id": 997,
                  "nodeType": "Return",
                  "src": "1065:21:12"
                }
              ]
            },
            "id": 999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "989:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1013:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "997:23:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 989,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 988,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "997:7:12"
                    },
                    "referencedDeclaration": 987,
                    "src": "997:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "996:25:12"
            },
            "returnParameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 993,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "1045:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:9:12"
            },
            "scope": 1030,
            "src": "980:114:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1015,
              "nodeType": "Block",
              "src": "1154:57:12",
              "statements": [
                {
                  "expression": {
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1005,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "1165:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "1165:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1201:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1008,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1002,
                            "src": "1182:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "1182:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1082,
                        "src": "1182:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1182:21:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1165:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:38:12"
                }
              ]
            },
            "id": 1016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1110:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1136:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1016,
                  "src": "1120:23:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1001,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1000,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "1120:7:12"
                    },
                    "referencedDeclaration": 987,
                    "src": "1120:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1119:25:12"
            },
            "returnParameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:0:12"
            },
            "scope": 1030,
            "src": "1101:110:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1028,
              "nodeType": "Block",
              "src": "1271:38:12",
              "statements": [
                {
                  "expression": {
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1022,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "1282:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "1282:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1300:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1282:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:19:12"
                }
              ]
            },
            "id": 1029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1227:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1253:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1029,
                  "src": "1237:23:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1018,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1017,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "1237:7:12"
                    },
                    "referencedDeclaration": 987,
                    "src": "1237:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1236:25:12"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:0:12"
            },
            "scope": 1030,
            "src": "1218:91:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1031,
        "src": "665:647:12",
        "usedErrors": []
      }
    ],
    "src": "32:1280:12"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        1030
      ],
      "SafeMath": [
        1163
      ]
    },
    "id": 1031,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 979,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:12"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 980,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1031,
        "sourceUnit": 1164,
        "src": "66:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 981,
          "nodeType": "StructuredDocumentation",
          "src": "92:569:12",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 1030,
        "linearizedBaseContracts": [
          1030
        ],
        "name": "Counters",
        "nameLocation": "673:8:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 984,
            "libraryName": {
              "id": 982,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1163,
              "src": "695:8:12"
            },
            "nodeType": "UsingForDirective",
            "src": "689:27:12",
            "typeName": {
              "id": 983,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "708:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 987,
            "members": [
              {
                "constant": false,
                "id": 986,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "906:6:12",
                "nodeType": "VariableDeclaration",
                "scope": 987,
                "src": "898:14:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 985,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "898:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "879:7:12",
            "nodeType": "StructDefinition",
            "scope": 1030,
            "src": "872:48:12",
            "visibility": "public"
          },
          {
            "body": {
              "id": 998,
              "nodeType": "Block",
              "src": "1054:40:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 995,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "1072:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 986,
                    "src": "1072:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 994,
                  "id": 997,
                  "nodeType": "Return",
                  "src": "1065:21:12"
                }
              ]
            },
            "id": 999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "989:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1013:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "997:23:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 989,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 988,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "997:7:12"
                    },
                    "referencedDeclaration": 987,
                    "src": "997:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "996:25:12"
            },
            "returnParameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 993,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 999,
                  "src": "1045:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:9:12"
            },
            "scope": 1030,
            "src": "980:114:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1015,
              "nodeType": "Block",
              "src": "1154:57:12",
              "statements": [
                {
                  "expression": {
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1005,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "1165:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "1165:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1201:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1008,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1002,
                            "src": "1182:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 986,
                          "src": "1182:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1082,
                        "src": "1182:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1182:21:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1165:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:38:12"
                }
              ]
            },
            "id": 1016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1110:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1136:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1016,
                  "src": "1120:23:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1001,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1000,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "1120:7:12"
                    },
                    "referencedDeclaration": 987,
                    "src": "1120:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1119:25:12"
            },
            "returnParameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:0:12"
            },
            "scope": 1030,
            "src": "1101:110:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1028,
              "nodeType": "Block",
              "src": "1271:38:12",
              "statements": [
                {
                  "expression": {
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1022,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "1282:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "1282:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1300:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1282:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:19:12"
                }
              ]
            },
            "id": 1029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1227:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1253:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1029,
                  "src": "1237:23:12",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1018,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1017,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 987,
                      "src": "1237:7:12"
                    },
                    "referencedDeclaration": 987,
                    "src": "1237:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$987_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1236:25:12"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:0:12"
            },
            "scope": 1030,
            "src": "1218:91:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1031,
        "src": "665:647:12",
        "usedErrors": []
      }
    ],
    "src": "32:1280:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-26T03:36:56.073Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}